@import '../../styles/common';
@import '../../Form/styles/mixin';

// Full container.
.rs-form-fluid .rs-form-control-wrapper {
  width: 100%;

  > .rs-input-number,
  > .rs-input {
    width: 100%;
  }
}

// Fixed width.
.rs-form-control-wrapper {
  // Used to provide relation for error message
  position: relative;

  > .rs-input-number,
  > .rs-input {
    width: @form-control-width;
  }

  &.read-only,
  &.plaintext {
    pointer-events: none;
    touch-action: none;
  }
}

// Vertical forms
.rs-form-vertical .rs-form-group .rs-input-group {
  width: @form-control-width;
}

.rs-form-vertical .rs-form-group .rs-form-control-wrapper {
  display: inline-block;
  // Make sure max width won't overflow.
  max-width: 100%;
}

// Horizontal forms
//
// Horizontal forms are built on grid classes and allow you to create forms with
// labels on the left and inputs on the right.

.rs-form-horizontal .rs-form-group {
  .rs-form-control-wrapper {
    float: left;
  }

  .rs-form-control-wrapper + .rs-form-help-text {
    clear: both;
  }

  // Help block
  .rs-form-control-wrapper + .rs-form-help-text:not(.rs-form-help-text-tooltip) {
    margin-left: @form-control-label-width + @form-control-label-margin-right;
  }
}

// Inline
.rs-form-inline .rs-form-group {
  .rs-form-control-wrapper {
    display: inline-block;
  }

  // Form control wrapper behind Screen only dom no need margin left.
  .rs-sr-only + .rs-form-control-wrapper {
    margin-left: 0;
  }
}

// Plain text
.rs-form-control-wrapper.plaintext {
  display: block !important;
  max-width: 100%;

  & + .rs-form-help-text {
    display: none;
  }

  .rs-form-control-default-value {
    padding: @padding-base-input-vertical 0;
  }

  > .rs-input {
    border: 1px solid @form-plain-text-border-color;
    padding-left: 0;
    padding-right: 0;
    width: auto;
  }

  > .rs-checkbox-group {
    .rs-checkbox-checker {
      padding-left: 0;
      display: inline-block;
    }

    .rs-checkbox-wrapper,
    .rs-checkbox:not(.rs-checkbox-checked) {
      display: none;
    }

    .rs-checkbox {
      position: relative;
      display: inline-block;
      font-weight: normal;
      margin-top: 0;
      margin-bottom: 0;
      margin-left: 0;
    }

    &-inline {
      margin-left: 0;
    }

    .rs-checkbox.rs-checkbox-checked ~ .rs-checkbox.rs-checkbox-checked::before {
      content: @form-plain-text-checkbox-divider-content;
    }
  }

  > .rs-radio-group {
    .rs-radio-checker {
      padding-left: 0;
    }

    .rs-radio-wrapper,
    .rs-radio:not(.rs-radio-checked) {
      display: none;
    }
  }

  > .rs-slider {
    // Rewrite inline style.
    margin: 0 !important;
    width: auto !important;

    .rs-tooltip {
      display: inline;
      position: static;
      opacity: 1;
    }

    .rs-slider-bar,
    .rs-slider-handle::before,
    .rs-tooltip::after {
      display: none;
    }

    .rs-slider-handle {
      position: static;
    }

    .rs-tooltip-inner {
      display: inline-block;
      background: transparent;
      color: @text-color;
      font-size: @font-size-base;
      line-height: @line-height-base;
      padding: @padding-base-vertical 0;
    }
  }

  > .rs-picker-default {
    .rs-picker-toggle {
      border: 1px solid @form-plain-text-border-color;
      padding-left: 0;
      padding-right: 0;
    }

    .rs-picker-toggle,
    .rs-picker-toggle-value {
      color: @text-color;

      .rs-picker-value-list {
        overflow: visible;
        white-space: normal;
      }
    }

    .rs-picker-toggle-clean,
    .rs-picker-toggle-caret,
    .rs-picker-value-count {
      display: none;
    }
  }

  > .rs-picker-input {
    display: block;
    border: 1px solid @form-plain-text-border-color;

    .rs-picker-toggle-clean,
    .rs-picker-toggle-caret {
      display: none;
    }

    .rs-picker-tag-wrapper {
      margin-left: -10px;
    }

    .rs-tag {
      padding-right: @tag-picker-content-padding-horizontal;

      .rs-tag-icon-close {
        display: none;
      }
    }

    .rs-picker-toggle {
      padding-left: 0;
      padding-right: @padding-base-horizontal;

      .rs-picker-toggle-value {
        color: @text-color;
      }
    }
  }

  .rs-picker-toggle {
    user-select: auto;
  }
}
